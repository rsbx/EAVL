
#define CALLBACK(NODE, COVER, CBP, CBDATA, LIMITER, RES)		\
	do								\
		{							\
		if ((*CBP))						\
			{						\
			int		CBres;				\
									\
			CBres = (**(CBP))((NODE), (COVER), (CBDATA));	\
			switch (CBres)					\
				{					\
				case EAVL_OK:				\
					break;				\
									\
				case EAVL_FINISHED:			\
					(*CBP) = NULL;			\
					break;				\
									\
				case EAVL_LIMIT:			\
					(LIMITER) = 1;			\
					break;				\
									\
				default:				\
					(*CBP) = NULL;			\
					(RES) = CBres;			\
				}					\
			}						\
		} while (0)


#define RWALK1(NODE, DIR, WANT, CB, CBDATA, RES)			\
	do								\
		{							\
		cb_t*		RW1_cb = (CB);				\
									\
		(RES) = rwalk1(						\
				(NODE),					\
				(DIR),					\
				(WANT),					\
				&RW1_cb,				\
				(CBDATA)				\
				);					\
		} while (0)


int rwalk1(
		node_t*			node,
		dir_t			dir,
		order_mask_t		want,
		cb_t**			cb,
		void*			cbdata
		)
	{
	int			limiter = 0;
	int			error = 0;

	if (!node || !*cb || !(want & (MASK_PRE | MASK_IN | MASK_POST)))
		{
		return 0;
		}

	if (!error && *cb && (want & MASK_PRE))
		{
		CALLBACK(node, MASK_PRE, cb, cbdata, limiter, error);
		}

	if (!error && *cb && !limiter)
		{
		error = rwalk1(GET_CHILD(node, OTHER(dir)), dir, want, cb, cbdata);
		}

	if (!error && *cb && (want & MASK_IN))
		{
		CALLBACK(node, MASK_IN, cb, cbdata, limiter, error);
		}

	if (!error && *cb && !limiter)
		{
		error = rwalk1(GET_CHILD(node, dir), dir, want, cb, cbdata);
		}

	if (!error && *cb && (want & MASK_POST))
		{
		CALLBACK(node, MASK_POST, cb, cbdata, limiter, error);
		}

	return error;
	}
